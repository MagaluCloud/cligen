name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.3'
          cache: true
          cache-dependency-path: |
            **/go.mod
            **/go.sum

      - name: Run lint
        run: make ci-lint

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.3'
          cache: true
          cache-dependency-path: |
            **/go.mod
            **/go.sum

      - name: Run tests
        run: make ci-test

      - name: Upload coverage
        uses: codecov/codecov-action@v4
        if: success()
        with:
          files: ./coverage.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.3'
          cache: true
          cache-dependency-path: |
            **/go.mod
            **/go.sum

      - name: Build binary
        run: make ci-build

      - name: Verify build
        run: ./cligen --help

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cligen-binary
          path: cligen
          retention-days: 7

  build-multi-platform:
    name: Build Multi-Platform
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          # - goos: linux
          #   goarch: arm64
          # - goos: darwin
          #   goarch: amd64
          # - goos: darwin
          #   goarch: arm64
          # - goos: windows
          #   goarch: amd64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25.3'
          cache: true

      - name: Build for ${{ matrix.goos }}/${{ matrix.goarch }}
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          if [ "${{ matrix.goos }}" = "windows" ]; then
            make build GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }}
            mv cligen cligen-${{ matrix.goos }}-${{ matrix.goarch }}.exe
          else
            make build GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }}
            mv cligen cligen-${{ matrix.goos }}-${{ matrix.goarch }}
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cligen-${{ matrix.goos }}-${{ matrix.goarch }}
          path: cligen-*
          retention-days: 30

